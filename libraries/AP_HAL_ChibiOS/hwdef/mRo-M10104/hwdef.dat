# hw definition file for processing by chibios_pins.py

# MCU class and specific type
MCU STM32G491 STM32G491xx

define HAL_CAN_DEFAULT_NODE_ID 0
define CAN_APP_NODE_NAME "io.mrobotics.mRo-m10104-pwr"

# bootloader starts firmware at 26k + 4k (STORAGE_FLASH)
FLASH_RESERVE_START_KB 30

# store parameters in pages
STORAGE_FLASH_PAGE 13
define HAL_STORAGE_SIZE 800

# setup build for a peripheral firmware
env AP_PERIPH 1

define HAL_WATCHDOG_ENABLED_DEFAULT true

# crystal frequency
OSCILLATOR_HZ 8000000
#define CH_CFG_ST_FREQUENCY 1000000

# assume the 256k flash part
FLASH_SIZE_KB 512

# board ID for firmware load
APJ_BOARD_ID 1101

define HAL_CAN_POOL_SIZE 6000

# LEDs
PA4 LED OUTPUT HIGH

# debugger support
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# Order of I2C buses
I2C_ORDER I2C1

# this board only has a single I2C bus so make it external
define HAL_I2C_INTERNAL_MASK 0

# Now the first I2C bus. The pin speeds are automatically setup
# correctly, but can be overridden here if needed.
PA15 I2C1_SCL I2C1
PB7 I2C1_SDA I2C1

# order of UARTs
SERIAL_ORDER USART1

STDOUT_SERIAL SD1
STDOUT_BAUDRATE 115200

PA9 USART1_TX USART1
PA10 USART1_RX USART1

# stack for fast interrupts
define PORT_INT_REQUIRED_STACK 64

define HAL_DISABLE_LOOP_DELAY

# enable CAN support
PA11 CAN1_RX CAN1
PA12 CAN1_TX CAN1

#define HAL_NO_MONITOR_THREAD

#define AP_PARAM_MAX_EMBEDDED_PARAM 512

#define HAL_USE_SERIAL FALSE
define HAL_USE_ADC FALSE
define HAL_STM32_ADC_USE_ADC1 FALSE
define HAL_DISABLE_ADC_DRIVER TRUE
#define HAL_NO_GPIO_IRQ

# avoid RCIN thread to save memory
define HAL_NO_RCIN_THREAD
#define HAL_USE_RTC FALSE
#define DISABLE_SERIAL_ESC_COMM TRUE

define DMA_RESERVE_SIZE 2048
#define SERIAL_BUFFERS_SIZE 512

#define HAL_PERIPH_ENABLE_BARO
define HAL_PERIPH_ENABLE_BATTERY

define HAL_BATT_MONITOR_DEFAULT 25
define HAL_BATT_I2C_BUS 1

# keep ROMFS uncompressed as we don't have enough RAM
# to uncompress the bootloader at runtime
env ROMFS_UNCOMPRESSED True

# don't share any DMA channels (there are enough for everyone)
DMA_NOSHARE *






